// Defining the dependencies on assets
//= depend_on_asset "teller/main.html"
//= depend_on_asset "teller/customer_detail.html"
//= depend_on_asset "teller/create_account.html"

var app = angular.module("ERBank");
app.config(function($stateProvider, $urlRouterProvider, $locationProvider){
  var state = $stateProvider.state
  state('404', {
    url: '/404',
    onEnter: function($window) {
      $window.location.href = '/404';
    }
  });
  state('view', { 
    url: '/teller',
    templateUrl: '<%= asset_path("teller/main.html") %>',
    controller: 'MainController'
  });
  state('customer_detail', {
    url: '/teller/customer/:id',
    templateUrl: '<%= asset_path("teller/customer_detail.html") %>',
    controller: 'CustomerController'
  });
  state('create_account', {
    url: '/teller/customer/:id/create',
    templateUrl: '<%= asset_path("teller/create_account.html") %>',
    controller: 'CreateAccountController'
  });
  state('credit_debit_account', {
    url: '/teller/customer/:id/account/:aid/credit-debit',
    templateUrl: '<%= asset_path("teller/credit_debit_account.html") %>',
    controller: 'CreditDebitController'
  });
  state('money_transfer', {
    url: '/teller/customer/:id/account/:aid/money-transfer',
    templateUrl: '<%= asset_path("teller/money_transfer.html") %>',
    controller: 'MoneyTransferController'
  });

  $('head').append($('<base/>').attr("href","/teller"));
  $locationProvider.html5Mode({ enabled: true });
  $urlRouterProvider.otherwise('/404');
});

app.controller('MainController', function($scope, $state, $backend) {
  $scope.refreshView = function() {
    $backend.customers.getList()
    .then(function(customers)  {
      $scope.customers = customers;
    })
  }

  $scope.view_customer = function(customer) {
    $state.transitionTo('customer_detail', {id: customer.id})
  }
});

app.controller('CustomerController', function($scope, $state, $backend, $stateParams, dialogs) {
  $scope.refreshUser = function() {
    $backend.customers.findById($stateParams.id)
    .then(function(customer) {
      $scope.customer = customer;
    }, function(reason) {
      alert(reason);
    })
  }

  $scope.delete_account = function(account) {
    var confirmation = dialogs.confirm("Deleting Account", "Are you sure you want to proceed?");
    confirmation.result.then(function(btn) {
      $backend.paymentAccount.delete(account.id).then(function() {
        $scope.refreshUser();
      }, function(reason) {
        alert(reason);
      });
    });
  }

  $scope.create_account = function() {
    $state.transitionTo('create_account', {id: $stateParams.id});
  }

  $scope.cancel = function() {
    $state.transitionTo('view');
  }

  $scope.credit_debit = function(account) {
    $state.transitionTo('credit_debit_account', {id: $stateParams.id, aid: account.id});
  }

  $scope.transfer = function(account) {
    $state.transitionTo('money_transfer', {id: $stateParams.id, aid: account.id});
  }
})

app.controller('CreateAccountController', function($scope, $state, $backend, $stateParams) {
   $scope.create_account = function() {
     $backend.paymentAccount.create($stateParams.id, $scope.account_name)
     .then(function(data) {
       $state.transitionTo('customer_detail', {id: $stateParams.id});
     }, function(reason) {
       alert(reason);
     });
   }

   $scope.cancel = function() {
     $state.transitionTo('customer_detail', {id: $stateParams.id});
   }
});


app.controller('CreditDebitController', function($scope, $state, $backend, $stateParams) {
  $scope.refreshAccount = function() {
    $backend.paymentAccount.getAccountById($stateParams.aid)
    .then(function(account) {
      $scope.account = account;
    }, function(reason) {
      alert(reason);
    })
  }

  $scope.do_operation = function() {
    $backend.paymentAccount.moneyOperation($stateParams.aid, $scope.op, $scope.amount, $scope.description)
    .then(function() {
      $state.transitionTo('customer_detail', {id: $stateParams.id});
    }, function(reason) {
      alert(reason);
    })
  }


  $scope.cancel = function() {
    $state.transitionTo('customer_detail', {id: $stateParams.id});
  }
});

app.controller('MoneyTransferController', function($scope, $state, $backend, $stateParams) {
  $scope.fromId = $stateParams.aid;

  $scope.refreshUsers = function() {
    $backend.customers.getList()
    .then(function(customers)  {
      $scope.customers = customers;
    })
  }

  $scope.refreshAccount = function() {
    $backend.paymentAccount.getAccountById($stateParams.aid)
    .then(function(account) {
      $scope.account = account;
    }, function(reason) {
      alert(reason);
    })
  }

  $scope.refreshDestination = function() {
    $backend.paymentAccount.getAccountsForUserId($scope.toUserId)
    .then(function(accounts) {
      $scope.destinations = accounts;
    }, function(reason) {
      alert(reason);
    })
  }

  $scope.refreshView = function() {
    $scope.refreshAccount();
    $scope.refreshUsers();
  }

  $scope.transfer = function() {
    $backend.paymentAccount.transferMoney($scope.amount, $scope.fromId, $scope.toId)
    .then(function() {
      $state.transitionTo('customer_detail', {id: $stateParams.id});
    }, function(reason) {
      alert(reason);
    })
  }

  $scope.$watch('toUserId', function(newValue, oldValue) {
    $scope.refreshDestination();
  });

  $scope.cancel = function() {
    $state.transitionTo('customer_detail', {id: $stateParams.id});
  }
});
// vim: ft=javascript
